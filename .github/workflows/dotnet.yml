name: Build and Deploy API Gateway

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Disable shallow clone to get a full clone for better analysis.

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies for API Gateway
        run: dotnet restore ./ApiGateway/ApiGateway/ApiGateway.csproj

      - name: Build API Gateway
        run: dotnet build ./ApiGateway/ApiGateway/ApiGateway.csproj --no-restore

      # Steps for building and pushing Docker images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API Gateway Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./ApiGateway
          file: ./ApiGateway/ApiGateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/apigateway-backend:latest

      # Steps for deploying to AKS
      - name: Set up Azure CLI
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s/deployment.yaml
          kubectl apply -f ./k8s/service.yaml
